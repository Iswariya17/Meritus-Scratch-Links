const LanguageDetect = require('languagedetect');
const ArgumentType = require('../../extension-support/argument-type');
const BlockType = require('../../extension-support/block-type');
const Cast = require('../../util/cast');
const log = require('../../util/log');

const lngDetector = new LanguageDetect();


class LanguageDetectExtension {
    getInfo() {
        return {
            id: 'languagedetect',
            name: 'LR w Scratch',
            blocks: [
                {
                    opcode: 'detectLanguage',
                    blockType: BlockType.COMMAND,
                    //   text: 'Detect language of text %s',
                    text: 'log [TEXT]',
                    arguments: {
                        s: {
                            type: ArgumentType.STRING,
                            defaultValue: 'Hello, World!',
                        },
                    },
                },
            ],
            menus: {},
        };
    }

    // detectLanguage({ s }) {
    //     // Use the languagedetect package to detect the language
    //     const languageDetect = new LanguageDetect();
    //     const result = languageDetect.detect(s);

    //     // Return the detected language
    //     return result && result.length > 0 ? result[0][0] : 'Unknown';
    // }

    detectLanguage() {
        // Use the "Ask [text] and wait" block to prompt the user to enter text
        // This will display a dialog box to capture user input
        const userText = prompt('Enter the text you want to analyze for language detection:');
        // console.log("testing",lngDetector.detect('This is a test.'));

        if (userText !== null) {
            // User entered text, proceed with language detection
            const result = this.detectLanguageInternal(userText);
            return result;
        } else {
            // User canceled the input, return a default value or handle accordingly
            return 'Cancelled';
        }
    }

    detectLanguageInternal(text) {
        // Use the languagedetect package to detect the language
        const languageDetect = new LanguageDetect();
        const result = languageDetect.detect(text);
      
        // Find the language with the highest confidence score
        let detectedLanguage = 'Unknown'; // Default value if no language is detected
        let maxConfidence = 0;
      
        if (result && result.length > 0) {
          result.forEach((entry) => {
            const [language, confidence] = entry;
            if (confidence > maxConfidence) {
              detectedLanguage = language;
              maxConfidence = confidence;
            }
          });
        }
      
        return `Detected Language: ${detectedLanguage} (Confidence: ${maxConfidence.toFixed(2)})`;
      }
}
// }

// Scratch.extensions.register(new LanguageDetectExtension());
module.exports = LanguageDetectExtension;


