{"version":3,"file":"chunks/gui.js","sources":["webpack://GUI/./src/playground/index.css","webpack://GUI/./src/playground/index.css?5c54","webpack://GUI/./src/playground/index.jsx","webpack://GUI/./src/playground/render-gui.jsx","webpack://GUI/./locale-data/complete.js (ignored)"],"sourcesContent":["exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"html,\\nbody,\\n.index_app_3Qs6X {\\n    /* probably unecessary, transitional until layout is refactored */\\n    width: 100%; \\n    height: 100%;\\n    margin: 0;\\n\\n    /* Setting min height/width makes the UI scroll below those sizes */\\n    min-width: 1024px;\\n    min-height: 640px; /* Min height to fit sprite/backdrop button */\\n}\\n\\n/* @todo: move globally? Safe / side FX, for blocks particularly? */\\n\\n* { box-sizing: border-box; }\\n\\n.index_menu-bar_menu-bar_JcuHF_32iSq{\\n    background-color: red !important;\\n}\\n\\n.index_main-container_25RUN {\\n    position: absolute;\\n    padding: 50px;\\n    display: flex;\\n    flex-direction: column;\\n    align-items: center;\\n    justify-content: center;\\n    top: 50%;\\n    left: 50%;\\n    transform: translate(-50%, -50%);\\n    background: #fff1f9;\\n}\", \"\"]);\n\n// exports\nexports.locals = {\n\t\"app\": \"index_app_3Qs6X\",\n\t\"menu-bar_menu-bar_JcuHF\": \"index_menu-bar_menu-bar_JcuHF_32iSq\",\n\t\"menuBarMenuBarJcuHf\": \"index_menu-bar_menu-bar_JcuHF_32iSq\",\n\t\"main-container\": \"index_main-container_25RUN\",\n\t\"mainContainer\": \"index_main-container_25RUN\"\n};","\nvar content = require(\"!!../../node_modules/css-loader/index.js??ref--5-1!../../node_modules/postcss-loader/src/index.js??postcss!./index.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../node_modules/css-loader/index.js??ref--5-1!../../node_modules/postcss-loader/src/index.js??postcss!./index.css\", function() {\n\t\tvar newContent = require(\"!!../../node_modules/css-loader/index.js??ref--5-1!../../node_modules/postcss-loader/src/index.js??postcss!./index.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","// Polyfills\nimport 'es6-object-assign/auto';\nimport 'core-js/fn/array/includes';\nimport 'core-js/fn/promise/finally';\nimport 'intl'; // For Safari 9\nimport '@babel/polyfill';\n\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport AppStateHOC from '../lib/app-state-hoc.jsx';\nimport BrowserModalComponent from '../components/browser-modal/browser-modal.jsx';\nimport supportedBrowser from '../lib/supported-browser';\nimport Cookies from 'js-cookie';\n\nimport styles from './index.css';\nimport './index.css'\n\nconst appTarget = document.createElement('div');\nappTarget.className = styles.app;\ndocument.body.appendChild(appTarget);\n\n\nfunction getTokenFromCookies() {\n    return Cookies.get('userIn'); // Replace with the actual name of your token cookie\n}\n\n\n// if (supportedBrowser()) {\n//     // require needed here to avoid importing unsupported browser-crashing code\n//     // at the top level\n//     require('./render-gui.jsx').default(appTarget);\n\n// } else {\n//     BrowserModalComponent.setAppElement(appTarget);\n//     const WrappedBrowserModalComponent = AppStateHOC(BrowserModalComponent, true /* localesOnly */);\n//     const handleBack = () => {};\n//     // eslint-disable-next-line react/jsx-no-bind\n//     ReactDOM.render(<WrappedBrowserModalComponent onBack={handleBack} />, appTarget);\n// }\n\n// Function to verify the JWT token and get user details\n// async function verifyTokenAndGetUser(token) {\n//     console.log(\"tokenfrom funcn\", token)\n//     try {\n//         const response = await fetch('http://localhost:3003/api/snap/verify', {\n//             method: 'get',\n//             headers: {\n//                 'Content-Type': 'application/json',\n//                 token: `Bearer ${token}`,\n\n//             },\n//         });\n\n//         if (response.ok) {\n//             // return await response.json();\n//             const res = await response.json();\n//             return res\n//             // console.log(\"respon form scratch ==>\", res)\n//         } else {\n//             throw new Error('Invalid token');\n//         }\n//         // console.log(\"response ==>\", response)\n//     } catch (error) {\n//         throw new Error('Token verification failed');\n//     }\n// }\n\n// // Function to extract the token from the URL\n// function getTokenFromURL() {\n//     const params = new URLSearchParams(window.location.search);\n//     console.log(\"token ==>\", params.get('token'))\n//     return params.get('token');\n// }\n\n\n// async function renderApp() {\n//     // try {\n//     //     // Extract the token from the URL\n//     //     const token = getTokenFromURL();\n\n//     //     if (!token) {\n//     //         throw new Error('No token found in the URL');\n//     //     }\n\n//     //     // Verify the token and get user details\n//     //     const user = await verifyTokenAndGetUser(token);\n\n//         // User is authenticated, render the main app\n//         require('./render-gui.jsx').default(appTarget);\n//     // } catch (error) {\n//     //     console.log(\"error\", error);\n//     //     if (error.message === 'No token found in the URL') {\n//     //         // Show a message about token not found in the URL\n//     //         const message = 'Token not found in the URL';\n//     //         showErrorMessage(message);\n//     //     } else if (error.message === 'Token verification failed') {\n//     //         // Show a message about token validation failure\n//     //         const message = 'Your session has been expired! Please login again.';\n//     //         showErrorMessage(message);\n//     //     } else {\n//     //         // For other errors, show the browser modal\n//     //         BrowserModalComponent.setAppElement(appTarget);\n//     //         const WrappedBrowserModalComponent = AppStateHOC(BrowserModalComponent, true /* localesOnly */);\n//     //         const handleBack = () => {\n//     //             console.log(\"clicked\");\n//     //         };\n//     //         ReactDOM.render(<WrappedBrowserModalComponent onBack={handleBack} />, appTarget);\n//     //     }\n//     // }\n// }\n\n// function showErrorMessage(message) {\n//     // Implement a function to show the error message to the user, for example, using an alert or a custom modal.\n//     // You can use libraries like React-Bootstrap or Material-UI for styling and displaying the error message.\n//     alert(message);\n//     window.location.href = 'http://localhost:3000/';\n// }\n\n// const appTarget = document.createElement('div');\n// appTarget.className = styles.app;\n// document.body.appendChild(appTarget);\n\n\nasync function renderApp() {\n    require('./render-gui.jsx').default(appTarget);\n}\n\nasync function verifyToken(token) {\n    try {\n        // Set the \"userIn\" cookie with the token value\n        // Cookies.set('userIn', token);\n        // Cookies.set('userIn', token, { domain: '.meritus.ai', expires: 3, sameSite: 'None', secure: true});\n\n        // Create a request body JSON object\n        const requestBody = {\n            userIn: token,\n        };\n\n\n\n        const response = await fetch('https://api.meritus.ai/api/snap/verify', {\n        // const response = await fetch('http://localhost:3003/api/snap/verify', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(requestBody), // Convert the request body to JSON\n            credentials: 'include', // Include cookies with the request\n\n        });\n\n        if (response.ok) {\n            return true; // Token is valid\n        } else {\n            return false; // Token is invalid\n        }\n    } catch (error) {\n        console.error('Error verifying token:', error);\n        return false; // An error occurred, treat as invalid\n    }\n}\n\n\n// async function renderApp() {\n//     const token = getTokenFromCookies();\n\n//     console.log(\"recived token ==>\", token)\n\n//     if (token) {\n//         // Token is present, verify it\n//         const tokenIsValid = await verifyToken(token);\n\n//         if (tokenIsValid) {\n//             // Token is valid, render the Scratch project\n//             require('./render-gui.jsx').default(appTarget);\n//         } else {\n//             // Token is invalid, render a message\n//             const notAuthenticatedMessage = (\n//                 <div className=\"main-container\" style={{\"position\" : \"absolute\", \"top\" : \"50%\", \"left\" : \"50%\", \"transform\" : \"translate(-50%, -50%)\", \"backgroundColor\" : \"#fff1f9\",\"padding\" : \"50px\", \"display\" : \"flex\", \"flexDirection\" : \"column\", \"justifyContent\" : \"center\", \"alignItems\" : \"center\"}}>\n//                     <div className=\"img-wrapper\"></div>\n//                     <h2>Token is expired!</h2>\n//                     <p>Kindly login again at <a href=\"https://meritus.ai/\">www.meritus.ai</a></p>\n//                     {/* <p>Go to </p> */}\n//                 </div>\n//             );\n\n//             ReactDOM.render(notAuthenticatedMessage, appTarget);\n\n//         }\n//     } else {\n//         // Token is not present, render a message\n//         const notAuthenticatedMessage = (\n//             <div className=\"main-container\" style={{\"position\" : \"absolute\", \"top\" : \"50%\", \"left\" : \"50%\", \"transform\" : \"translate(-50%, -50%)\", \"backgroundColor\" : \"#fff1f9\",\"padding\" : \"50px\", \"display\" : \"flex\", \"flexDirection\" : \"column\", \"justifyContent\" : \"center\", \"alignItems\" : \"center\"}}>\n//                 <div className=\"img-wrapper\"></div>\n//                 <h2>You are not authenticated!</h2>\n//                 <p>This site can only be accessed by valid course participants.</p>\n//                 <p>Go to <a href=\"https://meritus.ai/\">www.meritus.ai</a></p>\n//             </div>\n//         );\n\n//         ReactDOM.render(notAuthenticatedMessage, appTarget);\n//     }\n// }\n\n// Check if the browser is supported before rendering\nif (supportedBrowser()) {\n    renderApp();\n\n} else {\n    BrowserModalComponent.setAppElement(appTarget);\n    const WrappedBrowserModalComponent = AppStateHOC(BrowserModalComponent, true /* localesOnly */);\n    const handleBack = () => {\n        console.log(\"clicked\")\n    };\n    // eslint-disable-next-line react/jsx-no-bind\n    ReactDOM.render(<WrappedBrowserModalComponent onBack={handleBack} />, appTarget);\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {compose} from 'redux';\n\nimport AppStateHOC from '../lib/app-state-hoc.jsx';\nimport GUI from '../containers/gui.jsx';\nimport HashParserHOC from '../lib/hash-parser-hoc.jsx';\nimport log from '../lib/log.js';\n\nconst onClickLogo = () => {\n    window.location = 'https://scratch.mit.edu';\n};\n\nconst handleTelemetryModalCancel = () => {\n    log('User canceled telemetry modal');\n};\n\nconst handleTelemetryModalOptIn = () => {\n    log('User opted into telemetry');\n};\n\nconst handleTelemetryModalOptOut = () => {\n    log('User opted out of telemetry');\n};\n\n/*\n * Render the GUI playground. This is a separate function because importing anything\n * that instantiates the VM causes unsupported browsers to crash\n * {object} appTarget - the DOM element to render to\n */\nexport default appTarget => {\n    GUI.setAppElement(appTarget);\n\n    // note that redux's 'compose' function is just being used as a general utility to make\n    // the hierarchy of HOC constructor calls clearer here; it has nothing to do with redux's\n    // ability to compose reducers.\n    const WrappedGui = compose(\n        AppStateHOC,\n        HashParserHOC\n    )(GUI);\n\n    // TODO a hack for testing the backpack, allow backpack host to be set by url param\n    const backpackHostMatches = window.location.href.match(/[?&]backpack_host=([^&]*)&?/);\n    const backpackHost = backpackHostMatches ? backpackHostMatches[1] : null;\n\n    const scratchDesktopMatches = window.location.href.match(/[?&]isScratchDesktop=([^&]+)/);\n    let simulateScratchDesktop;\n    if (scratchDesktopMatches) {\n        try {\n            // parse 'true' into `true`, 'false' into `false`, etc.\n            simulateScratchDesktop = JSON.parse(scratchDesktopMatches[1]);\n        } catch {\n            // it's not JSON so just use the string\n            // note that a typo like \"falsy\" will be treated as true\n            simulateScratchDesktop = scratchDesktopMatches[1];\n        }\n    }\n\n    if (process.env.NODE_ENV === 'production' && typeof window === 'object') {\n        // Warn before navigating away\n        window.onbeforeunload = () => true;\n    }\n\n    ReactDOM.render(\n        // important: this is checking whether `simulateScratchDesktop` is truthy, not just defined!\n        simulateScratchDesktop ?\n            <WrappedGui\n                canEditTitle\n                isScratchDesktop\n                showTelemetryModal\n                canSave={false}\n                onTelemetryModalCancel={handleTelemetryModalCancel}\n                onTelemetryModalOptIn={handleTelemetryModalOptIn}\n                onTelemetryModalOptOut={handleTelemetryModalOptOut}\n            /> :\n            <WrappedGui\n                canEditTitle\n                backpackVisible\n                showComingSoon\n                backpackHost={backpackHost}\n                canSave={false}\n                onClickLogo={onClickLogo}\n            />,\n        appTarget);\n};\n","/* (ignored) */"],"mappings":";;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAIA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;AAIA;;AAoCA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;;AA/EA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AACA;AADA;AAPA;AAAA;AAcA;AACA;AACA;AACA;AADA;AAGA;AAAA;AACA;AACA;AARA;AACA;AAdA;AAaA;AACA;AAdA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AA8BA;AA9BA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;AA8EA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;;AC1NA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AAGA;AACA;AACA;AAAA;AACA;AAKA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAGA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAUA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;;;;;;;;;;;ACpFA;;;;A","sourceRoot":""}